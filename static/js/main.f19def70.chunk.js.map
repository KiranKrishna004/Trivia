{"version":3,"sources":["services/randoService.js","App.js","reportWebVitals.js","index.js"],"names":["num","baseUrl","axios","get","App","useState","randot","setRandot","rando","setRando","useEffect","randoService","then","response","data","catch","alert","className","onClick","Math","floor","random","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAOe,EALG,SAACA,GACjB,IAAMC,EAAO,gCAA4BD,GACzC,OAAOE,IAAMC,IAAIF,ICgDJG,EAhDH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEUF,mBAAS,GAFnB,mBAETG,EAFS,KAEFC,EAFE,KAIhBC,qBAAU,WACRC,EACaH,GACVI,MAAK,SAACC,GACLN,EAAUM,EAASC,SAEpBC,OAAM,WACLC,MAAM,oCAET,IAeH,OACE,gCACE,oBAAIC,UAAU,YAAd,SACE,yCAEF,sBAAKA,UAAU,oEAAf,UACE,qBAAKA,UAAU,mEAAf,SACGX,IAEH,uBACA,qBAAKW,UAAU,yCAAf,SACE,wBAAQA,UAAU,gBAAgBC,QAxBrB,WACnBP,EACaH,GACVI,MAAK,SAACC,GACLN,EAAUM,EAASC,MACnB,IAAMd,EAAMmB,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BZ,EAAST,MAEVe,OAAM,WACLC,MAAM,iCAeJ,6BC/BKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f19def70.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst getRandot = (num) => {\r\n  const baseUrl = `http://numbersapi.com/${num}`\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nexport default { getRandot }\r\n","import \"./App.css\"\nimport randoService from \"./services/randoService\"\nimport React, { useState, useEffect } from \"react\"\n\nconst App = () => {\n  const [randot, setRandot] = useState(\"\")\n  const [rando, setRando] = useState(0)\n\n  useEffect(() => {\n    randoService\n      .getRandot(rando)\n      .then((response) => {\n        setRandot(response.data)\n      })\n      .catch(() => {\n        alert(\"Epic fail from getRando App\")\n      })\n  }, [])\n\n  const handleButton = () => {\n    randoService\n      .getRandot(rando)\n      .then((response) => {\n        setRandot(response.data)\n        const num = Math.floor(Math.random() * 500)\n        setRando(num)\n      })\n      .catch(() => {\n        alert(\"Epic fail from getRandot \")\n      })\n  }\n\n  return (\n    <div>\n      <h1 className=\"ml-5 mt-5\">\n        <b>Trivia</b>\n      </h1>\n      <div className=\"box1 d-flex flex-column align-items-center justify-content-around\">\n        <div className=\"box2 styles p-4 d-flex justify-content-center align-items-center\">\n          {randot}\n        </div>\n        <br />\n        <div className=\"d-flex justify-content-center flex-end\">\n          <button className=\"button styles\" onClick={handleButton}>\n            Random\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}